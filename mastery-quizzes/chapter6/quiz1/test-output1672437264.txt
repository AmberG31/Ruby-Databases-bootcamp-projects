.FFF........................

Failures:

  1) Q1. Add up many numbers user enters just `stop` `puts`es `0`
     Failure/Error:
       expect { load "questions/question_1.rb" }
         .to output(/#{total}/).to_stdout

       expected block to output /0
       / to stdout, but output nothing
       Diff:
       @@ -1,3 +1,2 @@
       -/0
       -/
       +""
     # ./spec/question_1_spec.rb:41:in `set_user_input_and_check_expected_output'
     # ./spec/question_1_spec.rb:10:in `block (3 levels) in <top (required)>'

  2) Q1. Add up many numbers user enters `3` and `stop` `puts`es the total (3)
     Failure/Error:
       expect { load "questions/question_1.rb" }
         .to output(/#{total}/).to_stdout

       expected block to output /3
       / to stdout, but output nothing
       Diff:
       @@ -1,3 +1,2 @@
       -/3
       -/
       +""
     # ./spec/question_1_spec.rb:41:in `set_user_input_and_check_expected_output'
     # ./spec/question_1_spec.rb:19:in `block (3 levels) in <top (required)>'

  3) Q1. Add up many numbers user enters `5`, `4`, `3`, `2`, `1` and `stop` `puts`es the total (15)
     Failure/Error:
       expect { load "questions/question_1.rb" }
         .to output(/#{total}/).to_stdout

       expected block to output /15
       / to stdout, but output nothing
       Diff:
       @@ -1,3 +1,2 @@
       -/15
       -/
       +""
     # ./spec/question_1_spec.rb:41:in `set_user_input_and_check_expected_output'
     # ./spec/question_1_spec.rb:28:in `block (3 levels) in <top (required)>'

Finished in 7.53 seconds (files took 0.28701 seconds to load)
28 examples, 3 failures

Failed examples:

rspec ./spec/question_1_spec.rb:9 # Q1. Add up many numbers user enters just `stop` `puts`es `0`
rspec ./spec/question_1_spec.rb:18 # Q1. Add up many numbers user enters `3` and `stop` `puts`es the total (3)
rspec ./spec/question_1_spec.rb:27 # Q1. Add up many numbers user enters `5`, `4`, `3`, `2`, `1` and `stop` `puts`es the total (15)

